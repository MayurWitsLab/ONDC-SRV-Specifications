summary: Agricultural product - Bids and Auction for a Commodity (Minimum Bid Quantity)
description: The following is an illustrative flow to perform a transaction of a nature where a buyer would like to bids for agricultural commodity. The bids and auction majorly happens in four phases of order processing flow, i.e. Discovery of available commodity and service providers, order, fulfillment and post-fulfillmentand bids can be done with minimum quantity (If a Seller has 3 MT, and MBQ is (or can be) 1 MT).
details:

  - description: Sequence Diagram for Bids and Auction
    mermaidGraph: >-
      sequenceDiagram
        participant B as Buyer
        participant BA as BuyerApp
        participant G as Gateway
        participant SA1 as SellerApp1
        participant SA2 as SellerApp2
        
        Note Over B,SA: **SEARCH FLOW**
        B ->> BA: Search by city for a commodity
        BA ->> G: **/search** - Search by city for a commodity and <br>additional parameters
        Note left of BA: Additional params include: <br><br>
        G ->> SA1: **/search** - Commodity bids request broadcasted based <br>on city and domain in context
        G ->> SA2: **/search** - Commodity bids request broadcasted based <br>on city and domain in context
        SA1 ->> BA: **/on_search** - Commodity bids catalog returned <br>with pricing, seller statutory details, pricing
        SA2 ->> BA: **/on_search** - Commodity bids catalog returned <br>with pricing, seller statutory details, pricing
        Note Over BA,SA1: Buyer now has the option to choose the <br>Commodity bids from either Seller 1 or Seller 2 or both
        BA ->> B: Shows all the avilable bids <br>options from sellers

  - description: Ordering
    mermaidGraph: >-
      sequenceDiagram
        participant B as Buyer
        participant BA as BuyerApp
        participant G as Gateway
        participant SA as SellerApp
        Note Over B,SA: **SELECT FLOW**
        B ->> BA: Selects one of the <br>providers for avilable bids commodity
        BA ->> SA: **/select** - A commodity is selected with a <br>TTL for receiving response
        SA ->> BA: **/on_select** - Responds to the selection with <br>breakup, quote including logistics charges
        BA ->> B: Shows response with price details

  - description: Initializing the order
    mermaidGraph: >-
      sequenceDiagram
        participant B as Buyer
        participant BA as BuyerApp
        participant G as Gateway
        participant SA as SellerApp
        Note Over B,SA: **INITIALIZATION FLOW**
        B ->> BA: Proceeds with the Order
        BA ->> SA: **/init** - Initializes the order and <br>sends billing details
        SA ->> BA: **/on_init** - Order initialization with <br>fulfillment & settlement information <br>including UPI or NEFT/IMPS/Bank Transfer
        BA ->> B: Confirms initialization

  - description: Order Confirmation
    mermaidGraph: >-
      sequenceDiagram
        participant B as Buyer
        participant BA as BuyerApp
        participant SA as SellerApp
        Note Over B,SA: **CONFIRMATION FLOW**
        B ->> BA: Confirms the Order
        BA ->> SA: **/confirm** - Creates order to create final digital contract
        SA ->> BA: **/on_confirm** - Accepts the order 
        BA ->> B: Confirms order and delivery 

  - description: Fulfillment
    mermaidGraph: >-
      sequenceDiagram
        participant B as Buyer
        participant BA as BuyerApp
        participant SA as SellerApp 
        Note Over B,SA: **BIDS STATUS FLOW**
        B ->> BA: Checks the order status
        BA ->> SA: **/status** - Enquire order status <br>or tracking information
        SA ->> BA: **/on_status_in_transit** - Latest order and fulfillment status is sent
        BA ->> B: Updates the latest order <br>and fulfillment information

  - description: Post Fulfillment
    mermaidGraph: >-
      sequenceDiagram
        participant SA as SellerApp 
        participant BA as BuyerApp
        participant B as Buyer
        Note Over SA,B: **BIDS CONFIRM FLOW**
        SA ->> BA: **/on_update** - Send status as bids awarded
        BA ->> SA: **/update** - Buyer app ack the update
        BA ->> B: Updates the latest order <br>and fulfillment information

reference: if any
steps:
  - summary: Search based on the intent for bids and auction for a particular agricultural commodity
    api: search
    description: The buyer expresses interest in purchasing a commodity (such as wheat) from all currently available auctions, serviceable to him
    reference: if any
    example:
      $ref: "../../Examples/Agri_Bids_And_Auction_yaml/search/search_by_category.yaml"
  - summary: Returns the catalog specific to the search intent
    api: on_search
    description: Returns the catalog specific to the search intent <br><br> Buyer will select Minimum Bid Quantity (Buyer Side) /Lot Size (Seller Side) (If a Seller has 3 MT, and MBQ is (or can be) 1 MT)

    reference: if any
    example:
      $ref: "../../Examples/Agri_Bids_And_Auction_yaml/on_search/on_search_minimum_qty_bid.yaml"
  - summary: Buyer selects the required agri commodity
    api: select
    description: Buyer selects the required agri commodity + suitable fulfillment type
    reference: if any
    example:
      $ref: "../../Examples/Agri_Bids_And_Auction_yaml/select/select.yaml"
  - summary: Seller confirms the bids for commodity and returns the quote
    api: on_select
    description: Seller confirms the bids for commodity and returns the quote
    reference: if any
    example:
      $ref: "../../Examples/Agri_Bids_And_Auction_yaml/on_select/on_select.yaml"
  - summary: Buyer initialises the bids order for commodity
    api: init
    description: Buyer initialises the bids order for commodity and provides billing details
    reference: if any
    example:
      $ref: "../../Examples/Agri_Bids_And_Auction_yaml/init/init.yaml"
  - summary: Seller provides the final quotation for the commodity bids
    api: on_init
    description: Seller provides the final quotation
    reference: if any
    example:
      $ref: "../../Examples/Agri_Bids_And_Auction_yaml/on_init/on_init.yaml"
  - summary: Buyer confirm the bids order for the commodity
    api: confirm
    description: Buyer makes the payment to confirm the order
    example:
      $ref: "../../Examples/Agri_Bids_And_Auction_yaml/confirm/confirm.yaml"
  - summary: Seller accepts the order for commodity bids
    api: on_confirm
    description: Seller app sends an on_confirm call to the buyer app accepting the order
    reference: if any
    example:
      $ref: "../../Examples/Agri_Bids_And_Auction_yaml/on_confirm/on_confirm.yaml"
  - summary: Buyer requests for the status of the order
    api: status
    description: Buyer requests for the status of the order
    example:
      $ref: "../../Examples/Agri_Bids_And_Auction_yaml/status/status.yaml"
  - summary: Seller app sends order status update 
    api: on_status
    description: Seller app sends bids order status
    example:
      $ref: "../../Examples/Agri_Bids_And_Auction_yaml/on_status/on_status.yaml"
  - summary: Seller app sends bids status if Awarded
    api: on_update (Awarded)
    description: Seller app sends bids status if Awarded
    example:
      $ref: "../../Examples/Agri_Bids_And_Auction_yaml/on_update/on_update_awarded.yaml"
  - summary: Seller app sends bids status as cancel if Not Awarded
    api: on_cancel (Not Awarded)
    description: Seller app sends bids status as cancel if Not Awarded
    example:
      $ref: "../../Examples/Agri_Bids_And_Auction_yaml/on_cancel/on_cancel_merchant.yaml"
  # - summary: Buyer app shares the ratings to seller app
  #   api: rating
  #   description: Buyer leaves a detailed review on the buyer, sharing both positive and negative aspects. Buyer app shares the same with the seller app following the rating framework
  #   reference: if any
  #   example:
  #     $ref: "../../Examples/Agri_Bids_And_Auction_yaml/rating/rating.yaml"

